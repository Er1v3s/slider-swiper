{"version":3,"sources":["theme.js","slider.js","Swiper.js","main.js"],"names":["themeBtn","document","querySelector","bg","body","addEventListener","classList","toggle","arrowLeft","arrowRight","slider","images","querySelectorAll","bottom","sliderWidth","clientWidth","slide","length","i","div","createElement","add","appendChild","buttons","style","backgroundColor","resetCircleBackground","forEach","button","changeActiveCircle","btn","index","transform","nextSlide","prevSlide","goToFirstSlide","goToLastSlide","window","Swiper","maxTouchScreenWidth","initialX","event","startTouch","startMove","innerWidth","touches","clientX","positionX","diffX","Math","abs"],"mappings":"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","file":"main.bc24da5a.js","sourceRoot":"..\\src","sourcesContent":["// dark mode\r\nconst themeBtn = document.querySelector(\"input\");\r\nconst bg = document.body;\r\n\r\nthemeBtn.addEventListener(\"click\", () => {\r\n  bg.classList.toggle(\"dark-mode\");\r\n});\r\n","const arrowLeft = document.querySelector(\".left\");\r\nconst arrowRight = document.querySelector(\".right\");\r\nconst slider = document.querySelector(\".slider\");\r\nconst images = document.querySelectorAll(\".image\");\r\nconst bottom = document.querySelector(\".bottom\");\r\n\r\n// slider width handler (fixes resizing window eventlistener on the bottom)\r\nlet sliderWidth = slider.clientWidth;\r\nlet slide = 1;\r\n\r\n// images counter\r\nconst length = images.length;\r\n\r\n// create circles below slider\r\nfor (let i = 0; i < length; i++) {\r\n  const div = document.createElement(\"div\");\r\n  div.classList.add(\"button\");\r\n  bottom.appendChild(div);\r\n}\r\n\r\n// handle elements after creating it!! not before!!\r\nconst buttons = document.querySelectorAll(\".button\");\r\nbuttons[0].style.backgroundColor = \"white\";\r\n\r\n// reset bg of every circle\r\nconst resetCircleBackground = () => {\r\n  buttons.forEach((button) => {\r\n    button.style.backgroundColor = \"transparent\";\r\n  });\r\n};\r\n\r\nconst changeActiveCircle = () => {\r\n  resetCircleBackground();\r\n  buttons[slide - 1].style.backgroundColor = \"white\";\r\n};\r\n\r\n// handle the circle click event\r\nbuttons.forEach((btn, index) => {\r\n  btn.addEventListener(\"click\", () => {\r\n    slider.style.transform = `translateX(-${index * sliderWidth}px)`;\r\n    slide = index + 1;\r\n    changeActiveCircle();\r\n  });\r\n});\r\n\r\n// functions for changing slides\r\n\r\nconst nextSlide = () => {\r\n  slider.style.transform = `translateX(-${slide * sliderWidth}px)`;\r\n  slide++;\r\n};\r\n\r\nconst prevSlide = () => {\r\n  slide--;\r\n  slider.style.transform = `translateX(-${(slide - 1) * sliderWidth}px)`;\r\n};\r\n\r\nconst goToFirstSlide = () => {\r\n  slide = 1;\r\n  slider.style.transform = `translateX(0px)`;\r\n};\r\n\r\nconst goToLastSlide = () => {\r\n  slide = length;\r\n  slider.style.transform = `translateX(-${(length - 1) * sliderWidth}px)`;\r\n};\r\n\r\n// handle the arrows click event\r\n\r\narrowRight.addEventListener(\"click\", () => {\r\n  slide < length ? nextSlide() : goToFirstSlide();\r\n  changeActiveCircle();\r\n});\r\n\r\narrowLeft.addEventListener(\"click\", () => {\r\n  slide <= 1 ? goToLastSlide() : prevSlide();\r\n  changeActiveCircle();\r\n});\r\n\r\n// fixes resizing window\r\nwindow.addEventListener(\"resize\", () => {\r\n  sliderWidth = slider.clientWidth;\r\n  slider.style.transform = `translateX(-${slide * sliderWidth}px)`;\r\n});\r\n","class Swiper {\r\n  constructor() {\r\n    this.maxTouchScreenWidth = 1280;\r\n\r\n    this.initialX = null;\r\n    this.sliderWidth = null;\r\n    this.slide = 1;\r\n\r\n    this.slider = document.querySelector(\".slider\");\r\n    this.length = document.querySelectorAll(\".image\").length;\r\n    this.bottom = document.querySelector(\".bottom\");\r\n\r\n    document.addEventListener(\"DOMContentLoaded\", () => {\r\n      this.buttons = document.querySelectorAll(\".button\");\r\n    });\r\n\r\n    window.addEventListener(\"resize\", () => {\r\n      this.sliderWidth = this.slider.clientWidth;\r\n      this.slider.style.transform = `translateX(-${\r\n        (this.slide == this.length ? this.slide - 1 : this.slide) *\r\n        this.sliderWidth\r\n      }px)`;\r\n    });\r\n\r\n    document.addEventListener(\"touchstart\", (event) => {\r\n      this.startTouch(event);\r\n    });\r\n\r\n    document.addEventListener(\"touchmove\", (event) => {\r\n      this.startMove(event);\r\n    });\r\n  }\r\n\r\n  resetCircleBackground = () => {\r\n    this.buttons.forEach((button) => {\r\n      button.style.backgroundColor = \"transparent\";\r\n    });\r\n  };\r\n\r\n  changeActiveCircle = () => {\r\n    this.resetCircleBackground();\r\n    this.buttons[this.slide - 1].style.backgroundColor = \"white\";\r\n  };\r\n\r\n  nextSlide() {\r\n    this.slider.style.transform = `translateX(-${\r\n      this.slide * this.sliderWidth\r\n    }px)`;\r\n    this.slide++;\r\n  }\r\n\r\n  prevSlide() {\r\n    this.slide--;\r\n    this.slider.style.transform = `translateX(-${\r\n      (this.slide - 1) * this.sliderWidth\r\n    }px)`;\r\n  }\r\n\r\n  goToFirstSlide() {\r\n    this.slide = 1;\r\n    this.slider.style.transform = `translateX(0px)`;\r\n  }\r\n\r\n  goToLastSlide() {\r\n    this.slide = this.length;\r\n    this.slider.style.transform = `translateX(-${\r\n      (this.length - 1) * this.sliderWidth\r\n    }px)`;\r\n  }\r\n\r\n  startTouch(event) {\r\n    if (window.innerWidth < this.maxTouchScreenWidth) {\r\n      this.initialX = event.touches[0].clientX;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  startMove(event) {\r\n    if (!this.initialX) return;\r\n\r\n    this.positionX = event.touches[0].clientX;\r\n\r\n    let diffX = this.initialX - this.positionX;\r\n    diffX = Math.abs(diffX);\r\n\r\n    if (diffX > 0) {\r\n      if (this.initialX < this.positionX) {\r\n        this.slide < this.length ? this.nextSlide() : this.goToFirstSlide();\r\n      } else {\r\n        this.slide <= 1 ? this.goToLastSlide() : this.prevSlide();\r\n      }\r\n      this.changeActiveCircle();\r\n    }\r\n    this.initialX = null;\r\n  }\r\n}\r\n\r\nnew Swiper();\r\n","import \"./theme\";\r\nimport \"./slider\";\r\nimport \"./Swiper\";\r\n"]}